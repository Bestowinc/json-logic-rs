name: "Continuous Integration"
on: [push]

jobs:
  test:
    name: "Test"
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
        python-version: [3.6, 3.7, 3.8]
    runs-on: "${{ matrix.os }}"
    steps:
      # Check out the code
      - uses: "actions/checkout@v2"

      # We need node for some integration tests
      - uses: "actions/setup-node@v1"

      # Install python
      - name: "Set up python"
        uses: "actions/setup-python@v2"
        with:
          python-version: "${{ matrix.python-version }}"

      - name: "Get Python Path"
        id: get-py-path
        shell: bash
        run: |
          echo "::set-output name=path::$(which python)"

      # Set the current month and year (used for cache key)
      - name: "Get Date"
        id: get-date
        # Outputs e.g. "202007"
        # tbh I have yet to find the docs where this output format is
        # defined, but I copied this from the official cache action's README.
        run: |
          echo "::set-output name=date::$(/bin/date -u '+%Y%m')"
        shell: bash

      # Generate the lockfile
      - name: "Generate Cargo Lockfile"
        run: "cargo generate-lockfile"

      # Cache build dependencies
      - name: "Cache Build Fragments"
        id: "cache-build-fragments"
        uses: "actions/cache@v2"
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
            target
          # Rebuild whenever the cargo lock file changes
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}

      # Cache `cargo install` built binaries
      - name: "Cache Built Binaries"
        id: "cache-binaries"
        uses: "actions/cache@v2"
        with:
          path: "~/.cargo/bin"
          # In theory, this should rebuild binaries once a month
          key: "${{ runner.os }}-cargo-binaries-${{steps.get-date.outputs.date}}"

      # Ensure we're all set up
      - name: "Perform Setup"
        run: "make setup"
        shell: bash
        env:
          # PY_VER: "${{ matrix.python-version }}"
          WINDOWS: "${{ contains(runner.os, 'windows') }}"
          PYTHON: ${{ steps.get-py-path.outputs.path }}

      - name: "Run Tests"
        if: "${{ !contains(runner.os, 'windows') }}"
        shell: bash
        run: "cargo test --all-features"

      - name: "Run Tests (Windows)"
        if: "${{ contains(runner.os, 'windows') }}"
        shell: bash
        # Python behaves weirdly with setup.py develop in Windows,
        # when it comes to loading DLLs, so on that platform we build and
        # install the wheel and run the tests with that.
        # Running `cargo test --features=wasm` runs all the regular lib
        # tests plus the WASM integration tests, while excluding the
        # python integration tests
        run: |
          cargo test --features=wasm
          make develop-py-wheel
          pip install dist/*.whl
          python tests/test_py.py
        env:
          WINDOWS: "${{ contains(runner.os, 'windows') }}"
          PYTHON: ${{ steps.get-py-path.outputs.path }}

  build-wasm:
    name: "Build WASM"
    runs-on: ubuntu-latest
    steps:
      # Check out the code
      - uses: "actions/checkout@v2"

      # Set the current month and year (used for cache key)
      - name: "Get Date"
        id: get-date
        # Outputs e.g. "202007"
        # tbh I have yet to find the docs where this output format is
        # defined, but I copied this from the official cache action's README.
        run: |
          echo "::set-output name=date::$(/bin/date -u '+%Y%m')"
        shell: bash

      # Generate the lockfile
      - name: "Generate Cargo Lockfile"
        run: "cargo generate-lockfile"

      # Cache build dependencies
      - name: "Cache Build Fragments"
        id: "cache-build-fragments"
        uses: "actions/cache@v2"
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
            target
          # Rebuild whenever the cargo lock file changes
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}

      # Cache `cargo install` built binaries
      - name: "Cache Built Binaries"
        id: "cache-binaries"
        uses: "actions/cache@v2"
        with:
          path: "~/.cargo/bin"
          # In theory, this should rebuild binaries once a month
          key: "${{ runner.os }}-cargo-binaries-${{steps.get-date.outputs.date}}"

      - name: "Perform Setup"
        run: "make setup"
        shell: bash

      - name: "Build WASM"
        run: "make build-wasm"

      - uses: "actions/upload-artifact@v2"
        with:
          path: js/
          name: wasm-pkg

  build-python-wheels:
    name: "Build Python Wheels"
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
        python-version: [3.6, 3.7, 3.8]
    runs-on: "${{ matrix.os }}"
    steps:
      # Check out the code
      - uses: "actions/checkout@v2"

      # Install python
      - name: "Set up python"
        uses: "actions/setup-python@v2"
        with:
          python-version: "${{ matrix.python-version }}"

      - name: "Get Python Path"
        id: get-py-path
        shell: bash
        run: |
          echo "::set-output name=path::$(which python)"

      # Set the current month and year (used for cache key)
      - name: "Get Date"
        id: get-date
        # Outputs e.g. "202007"
        # tbh I have yet to find the docs where this output format is
        # defined, but I copied this from the official cache action's README.
        run: |
          echo "::set-output name=date::$(/bin/date -u '+%Y%m')"
        shell: bash

      # Generate the lockfile
      - name: "Generate Cargo Lockfile"
        run: "cargo generate-lockfile"

      # Cache build dependencies
      - name: "Cache Build Fragments"
        id: "cache-build-fragments"
        uses: "actions/cache@v2"
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
            target
          # Rebuild whenever the cargo lock file changes
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}

      # Cache `cargo install` built binaries
      - name: "Cache Built Binaries"
        id: "cache-binaries"
        uses: "actions/cache@v2"
        with:
          path: "~/.cargo/bin"
          # In theory, this should rebuild binaries once a month
          key: "${{ runner.os }}-cargo-binaries-${{steps.get-date.outputs.date}}"

      - name: "Perform Setup"
        run: "make setup"
        shell: bash
        env:
          WINDOWS: "${{ contains(runner.os, 'windows') }}"
          PYTHON: ${{ steps.get-py-path.outputs.path }}

      - name: "Build Python Wheel"
        run: "make build-py-wheel"
        env:
          WINDOWS: "${{ contains(runner.os, 'windows') }}"
          PYTHON: ${{ steps.get-py-path.outputs.path }}

      - uses: "actions/upload-artifact@v2"
        with:
          path: "dist/*.whl"
          name: "py-${{ matrix.python-version }}-${{ runner.os }}-whl"

  build-python-sdist:
    name: "Build Python Source Dist"
    runs-on: ubuntu-latest
    steps:
      # Check out the code
      - uses: "actions/checkout@v2"

      # Install python
      - name: "Set up python"
        uses: "actions/setup-python@v2"
        with:
          python-version: "${{ matrix.python-version }}"

      - name: "Get Python Path"
        id: get-py-path
        shell: bash
        run: |
          echo "::set-output name=path::$(which python)"

      # Set the current month and year (used for cache key)
      - name: "Get Date"
        id: get-date
        # Outputs e.g. "202007"
        # tbh I have yet to find the docs where this output format is
        # defined, but I copied this from the official cache action's README.
        run: |
          echo "::set-output name=date::$(/bin/date -u '+%Y%m')"
        shell: bash

      # Generate the lockfile
      - name: "Generate Cargo Lockfile"
        run: "cargo generate-lockfile"

      # Cache build dependencies
      - name: "Cache Build Fragments"
        id: "cache-build-fragments"
        uses: "actions/cache@v2"
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
            target
          # Rebuild whenever the cargo lock file changes
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}

      # Cache `cargo install` built binaries
      - name: "Cache Built Binaries"
        id: "cache-binaries"
        uses: "actions/cache@v2"
        with:
          path: "~/.cargo/bin"
          # In theory, this should rebuild binaries once a month
          key: "${{ runner.os }}-cargo-binaries-${{steps.get-date.outputs.date}}"

      - name: "Perform Setup"
        run: "make setup"
        shell: bash
        env:
          WINDOWS: "${{ contains(runner.os, 'windows') }}"
          PYTHON: ${{ steps.get-py-path.outputs.path }}

      - name: "Build Python Source Dist"
        run: "make build-py-sdist"
        env:
          WINDOWS: "${{ contains(runner.os, 'windows') }}"
          PYTHON: ${{ steps.get-py-path.outputs.path }}

      - uses: "actions/upload-artifact@v2"
        with:
          path: dist/*.tar.gz
          name: py-sdist
